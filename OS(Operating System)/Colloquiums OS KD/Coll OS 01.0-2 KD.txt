1. ООП — это подход к программированию, где программа строится из объектов — сущностей, объединяющих данные и методы для работы с ними.
Его основа — четыре принципа: инкапсуляция (сокрытие внутреннего устройства), 
наследование (создание новых классов на основе существующих), 
полиморфизм (возможность одних и тех же методов работать с разными типами данных) и 
абстракция (сокрытие сложной реализации behind простого интерфейса).

2. Процедурное программирование основано на последовательности команд и вызове процедур (функций). 
Структурная декомпозиция — это метод разбиения сложной задачи на меньшие, логические блоки-функции. 
Например, программа "Калькулятор" делится на функции: `getUserInput()`, `calculate()`, `displayResult()`, что делает код организованным и понятным.

3. Архитектура ПО — это фундаментальная структура системы, набор ключевых решений о том, 
как компоненты (модули, сервисы) взаимодействуют друг с другом и с внешним миром. 
Она определяет, как система будет масштабироваться, поддерживаться и развиваться. 
Примеры: монолит (все части — единое целое), микросервисы (система из небольших независимых сервисов) и 
многоуровневая архитектура (разделение на уровни, например, представления, логики и данных).

4. Энтропия ПО — это мера беспорядка и сложности в коде, которая со временем растет, если за кодом не ухаживать. Примеры: 
1) Дублирование кода — когда одна логика повторяется в разных местах; 
2) "Божественный объект" — класс, который знает и делает слишком много, нарушая принципы проектирования; 
3) Жестко связанный код — когда изменения в одном модуле требуют правок в десятках других.

5. Закон Иерархических Компенсаций Седова гласит, что для эффективности системы в целом её части должны быть неэффективны по отдельности. 
В IT это означает поиск компромиссов: 
1) Скорость vs Качество (быстрая разработка ведет к долгу); 
2) Производительность vs Ресурсы (максимум скорости требует огромных затрат); 
3) Безопасность vs Удобство; 
4) Масштабируемость vs Сложность; 
5) Инновации vs Стабильность; 
6) Автоматизация vs Контроль; 
7) Специализация vs Универсальность команды.
